version: "3.9"

services:
  gouache-resource:
    container_name: gouache-resource
    restart: always
    ports:
      - "4000:4000"
    build:
      context: ./services/resource/
      dockerfile: Dockerfile.dev
    networks:
      - gouache-network
    depends_on:
      - gouache-dynamodb
      - gouache-cache

  gouache-auth:
    container_name: gouache-auth
    restart: always
    ports:
      - "5000:5000"
    build:
      context: ./services/auth/
      dockerfile: Dockerfile.dev
    env_file: ./services/auth/.env
    volumes:
      - ./services/auth/:/app
    networks:
      - gouache-network
    depends_on:
      - gouache-dynamodb
      - gouache-cache

  gouache-dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: gouache-dynamodb
    restart: always
    user: root # otherwise, we need to configure the dynamodb user
    ports:
      - "8000:8000"
    networks:
      - gouache-network
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data" # dirty fix: sudo chmod 777 ./docker/dynamodb
    working_dir: /home/dynamodblocal

  gouache-cache:
    container_name: gouache-cache
    image: redis
    restart: always
    ports:
     - "6379:6379"
    networks:
      - gouache-network
    command: redis-server --save 20 1 --loglevel warning --requirepass password

  gouache-client:
    container_name: gouache-client
    restart: always
    ports:
      - "3000:3000"
    build:
      context: ./services/client/
      dockerfile: Dockerfile.dev
    env_file:
      - ./services/client/.env
    volumes:
      - ./services/client/:/app
    networks:
      - gouache-network
    depends_on:
      - gouache-auth
      - gouache-resource

networks:
  gouache-network:
    driver: bridge
