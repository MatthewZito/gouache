package com.github.exbotanical.resource.entities;

import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import org.hibernate.validator.constraints.Length;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;

import javax.validation.constraints.NotEmpty;
import java.time.Instant;
import java.util.List;

/**
 * A Resource object - the primary data type of the Gouache system as of this moment. Essentially an
 * exceedingly generic object.
 */
@NoArgsConstructor
@AllArgsConstructor
@Builder
@DynamoDbBean
public class Resource {
  private String id;

  private String title;

  private List<String> tags;

  public Instant createdAt;

  public Instant updatedAt;

  public static final String TABLE_NAME = "resource";

  @DynamoDbPartitionKey()
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  // @todo composite key
  @NotEmpty(message = "title is required")
  @Length(max = 128, message = "length must be less than or equal to 128 characters")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_IF_NOT_EXISTS)
  @DynamoDbAutoGeneratedTimestampAttribute()
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSZ", timezone = "UTC")
  public Instant getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Instant createdAt) {
    this.createdAt = createdAt;
  }

  @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_ALWAYS)
  @DynamoDbAutoGeneratedTimestampAttribute()
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSZ", timezone = "UTC")
  public Instant getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Instant updatedAt) {
    this.updatedAt = updatedAt;
  }
}
